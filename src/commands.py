from src.bot import *
from src.users import *
from src.admin import *
from src.paypal import *
from src.database import *
from src.keyboards import *
from telethon import events
from datetime import datetime


@bot.on(events.callbackquery.CallbackQuery())
async def new_button(event):
    try:
        id = event.original_update.user_id
    except Exception as e:
        id = chat_id
    command = event.original_update.data.decode('utf-8')

    logging.info(f'Command|{id}: {command}')

    if '‚öúÔ∏è–ê–¥–º–∏–Ω–∫–∞' == command:
        set_admin_info(False)
        await bot.send_message(id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—é', buttons=admin_buttons)

    elif 'List' == command:
        await event.delete()
        request = get_users()
        for i in range(0, len(request), 20):
            tmp = request[i: i + 20]
            txt = ''
            for j in range(len(tmp)):
                txt += f'üÜî: `{tmp[j]["user_id"]}`\n'
                if tmp[j]["username"] is not None:
                    txt += f'USERNAME: @{tmp[j]["username"]}\n'

                if tmp[j]["active"]:
                    txt += 'üü¢–ê–Ω–∫–µ—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞\n'
                else:
                    txt += 'üî¥–ê–Ω–∫–µ—Ç–∞ –æ—Ç—Å—É—Ç–≤—É–µ—Ç\n'

                if tmp[j]["subscription"] is not None:
                    txt += f'–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {tmp[j]["subscription"]}\n'
                else:
                    txt += '–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç—Å—É—Ç–≤—É–µ—Ç\n'

                if tmp[j]["is_fake"]:
                    txt += '‚ô¶Ô∏è–§–µ–π–∫\n'
                else:
                    txt += 'üî∑–ù–µ —Ñ–µ–π–∫\n'

                if tmp[j]["chat_with"] == 0:
                    txt += '–ù–µ –≤—Å—Ç—É–ø–∏–ª(–∞) –≤ —á–∞—Ç\n'
                else:
                    txt += f'–í —á–∞—Ç–µ —Å {tmp[j]["chat_with"]}\n'

                txt += '\n\n'
            await bot.send_message(id, txt)
        await bot.send_message(id, '–£–∑–Ω–∞—Ç—å –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ?',
                               buttons=[Button.inline('–í–≤–µ—Å—Ç–∏ üÜî', 'Info')])

    elif 'Info' == command[:4]:
        if command.count('=') == 0:
            set_admin_info(True)
            await bot.send_message(id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ üÜî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', buttons=Button.inline('‚ùå–û—Ç–º–µ–Ω–∞', '‚öúÔ∏è–ê–¥–º–∏–Ω–∫–∞'))
        else:
            set_admin_info(False)
            user_id = int(command.split('=')[-1])
            template = [
                Button.inline('-10', f'Change={user_id}=-10'),
                Button.inline('-5', f'Change={user_id}=-5'),
                Button.inline('-1', f'Change={user_id}=-1'),
                Button.inline('+1', f'Change={user_id}=+1'),
                Button.inline('+5', f'Change={user_id}=+5'),
                Button.inline('+10', f'Change={user_id}=+10'),
            ]
            await bot.send_file(
                id,
                file=get_photo(user_id),
                parse_mode='HTML',
                caption=dict_to_str(get_user(user_id)),
                buttons=template
            )

    elif 'Show' == command[:4]:
        user_id = int(command.split('=')[-1])

        await bot.send_file(
            id,
            file=get_photo(user_id),
            parse_mode='HTML',
            caption=dict_to_str(get_user(user_id)),
            buttons=[Button.inline('–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É', 'Form=close')]
        )

    elif 'Change' == command[:6]:
        user_id = int(command.split('=')[1])
        x = int(command.split('=')[2])
        change_day(user_id, x)
        txt = f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —É `{user_id}` –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {x}\n'\
              f'–ü–æ—Å–¥–µ–¥–Ω–∏–π –¥–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏: {get_subscription(user_id)}'
        await bot.send_message(id, txt)

    elif 'Form' == command[:4]:
        stage = command.split('=')[-1]
        if stage == 'start':
            form_filling[id] = 1
            await event.edit('–í–≤–µ–¥–∏—Ç–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
        elif stage == 'close':
            update_user(id, 'active', 0)
            await event.edit('–ê–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞')

    elif 'Sex' == command[:3]:
        tmp = int(command.split('=')[-1])
        print(tmp)
        update_user(id, 'gender', tmp)
        form_filling[id] = 4
        await bot.send_message(id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥')

    elif 'Check' == command[:5]:
        payment_id = command.split('=')[-1]

        result = get_payment(payment_id)
        if result:
            user_id, amount, time = result.split('=')
            user_id, amount = int(user_id), int(amount)

            days = amount_to_days[amount]
            change_day(user_id, days)
            await event.delete()
            txt = '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ\n\n'\
                  '–°—Å—ã–ª–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç —Å—Ç–∞–Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ –º–∏–Ω—É—Ç—ã'
            await bot.send_message(id, txt)

            txt = '‚ûï–ù–æ–≤–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ\n'\
                  f'üÜî: `{user_id}`\n'\
                  f'–ù–∞ —Å—É–º–º—É: {amount}üí∂'
            for admin_id in admins:
                try:
                    await bot.send_message(admin_id, txt)
                except ValueError:
                    pass
        else:
            txt = '–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –∏–ª–∏ –µ—â—ë –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–¥–Ω–µ–µ\n'\
                  '–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º'
            await event.delete()
            await bot.send_message(id, txt, buttons=[
                [Button.inline('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', command)],
                [Button.url('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä‚ÜóÔ∏è', 'https://t.me/Ksenia_Kozlova_Italy')],
            ])

    elif 'Pay' == command[:3]:
        amount = int(command.split('=')[-1])
        time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        try:
            result = create_payment(id, amount, time)
        except Exception as e:
            result = False
            logging.error(str(e))

        await event.delete()
        if result:
            txt = f'–û–ø–ª–∞—Ç–∏—Ç—å {amount}üí∂\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É'
            await bot.send_message(id, txt, buttons=[
                [Button.url('‚úÖ–û–ø–ª–∞—Ç–∏—Ç—å', result[0])],
                [Button.inline('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', f'Check={result[1]}')],
            ])
        else:
            txt = '–û–ø–ª–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞'
            await bot.send_message(id, txt, buttons=[
                Button.url('–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º‚Üó', 'https://t.me/Ksenia_Kozlova_Italy')
            ])

    elif 'Reject' == command[:6]:
        user_id = int(command.split('=')[-1])
        await event.delete()
        await bot.send_message(id, '–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω')

        if id == get_companion(user_id):
            update_user(user_id, 'chat_with', 0)
            if user_id in admins:
                await bot.send_message(user_id, '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å', buttons=admin_keyboard)
            else:
                await bot.send_message(user_id, '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å', buttons=main_keyboard)

    elif 'Dialog' == command[:6]:
        user_id = int(command.split('=')[-1])

        active = is_user_active(user_id)

        now = datetime.now()
        girl = is_user_girl(id)
        user_time = get_subscription(id)

        if user_time is None or user_time < now:
            enough_time = False
        else:
            enough_time = True

        if active:
            if girl or (not girl and enough_time):
                user_companion = get_companion(user_id)
                update_user(id, 'chat_with', user_id)
                if id == user_companion:
                    await bot.send_message(id, f'–ù–∞—á–∞–ª—Å—è –¥–∏–∞–ª–æ–≥ —Å {user_id}', buttons=dialog_keyboard)
                    await bot.send_message(user_id, f'–ù–∞—á–∞–ª—Å—è –¥–∏–∞–ª–æ–≥ —Å {id}', buttons=dialog_keyboard)
                elif user_companion == 0:
                    await bot.send_message(id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É', buttons=dialog_keyboard)
                    await bot.send_file(
                        user_id,
                        file=get_photo(id),
                        parse_mode='HTML',
                        caption=dict_to_str(get_user(id)),
                        buttons=[
                            Button.inline('–ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥', f'Dialog={id}'),
                            Button.inline('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', f'Reject={id}'),
                        ]
                    )
                else:
                    await bot.send_message(id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∑–∞–Ω—è—Ç\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ')
            else:
                await bot.send_message(id, '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
        else:
            await bot.send_message(id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∞–Ω–∫–µ—Ç–∞ —É–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞')
