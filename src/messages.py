from src.bot import *
from src.users import *
from src.admin import *
from src.database import *
from src.keyboards import *
from telethon import events


@bot.on(events.NewMessage)
async def new_message(event):
    try:
        id = event.peer_id.user_id
    except Exception as e:
        id = chat_id
    text, media = event.raw_text, event.media

    logging.info(f'Message|{id}: {text}')

    if '/start' == text:
        txt = '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤\n'

        if id not in users_list:
            try:
                txt += '–í–∞–º –ø–æ–¥–∫–ª—é—á–µ–Ω–æ 5 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏'
                person = await bot.get_entity(id)
                add_user(id, person.username)
                change_day(id, 5)
            except Exception as e:
                logging.error(str(e))

        if id in admins:
            await bot.send_message(id, txt, buttons=admin_keyboard)
        else:
            await bot.send_message(id, txt, buttons=main_keyboard)

    elif 'üìÑ–ê–Ω–∫–µ—Ç–∞' == text:
        active = is_user_active(id)
        if not active:
            await bot.send_message(id, '–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã', buttons=Button.inline('‚úÖ', 'Form=start'))
        else:
            await bot.send_message(id, 'üü¢–ê–Ω–∫–µ—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞', buttons=[
                [Button.inline('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—É', f'Show={id}')],
                [Button.inline('–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É', 'Form=close')],
            ])

    elif 'üíé–û–ø–ª–∞—Ç–∞' == text:
        time = get_subscription(id)
        if time is None:
            txt = '–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
            await bot.send_message(id, txt, buttons=payment_buttons)
        else:
            txt = f'–ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏: {time}\n'
            await bot.send_message(id, txt, buttons=payment_buttons)

    elif 'üëÅ–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç' == text:
        active = is_user_active(id)
        if not active:
            txt = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É'
        else:
            if not is_user_girl(id):
                now = datetime.now()
                user_time = get_subscription(id)
                if user_time is None or now < user_time:
                    txt = f'<a href="https://t.me/joinchat/AAAAAFbde26LlkasnMgH9A">–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç</a>'
                else:
                    txt = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'
            else:
                txt = '–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'
        await bot.send_message(id, txt, parse_mode='HTML')

    elif '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å' == text and id in form_filling:
        if form_filling[id] == 5:
            txt = '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ'
            if id in admins:
                await bot.send_message(id, txt, buttons=admin_keyboard)
            else:
                await bot.send_message(id, txt, buttons=main_keyboard)
            update_user(id, 'latitude', None)
            update_user(id, 'longitude', None)
            form_filling[id] = 6
            await bot.send_message(id, '–ù–∞–ø–∏—à–∏—Ç–µ –æ —Å–µ–±–µ –ø–∞—Ä—É —Å–ª–æ–≤')

    elif '‚öúÔ∏è–ê–¥–º–∏–Ω–∫–∞' == text:
        set_admin_info(False)
        await bot.send_message(id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—é', buttons=admin_buttons)

    elif '–ó–∞–≤–µ—Ä—à–∏—Ç—å' == text:
        companion = get_companion(id)
        if id == get_companion(companion):
            update_user(companion, 'chat_with', 0)
            if companion in admins:
                await bot.send_message(companion, '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥', buttons=admin_keyboard)
            else:
                await bot.send_message(companion, '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥', buttons=main_keyboard)

        update_user(id, 'chat_with', 0)
        if id in admins:
            await bot.send_message(id, '–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω', buttons=admin_keyboard)
        else:
            await bot.send_message(id, '–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω', buttons=main_keyboard)

    elif media is not None:
        if id in form_filling:
            if form_filling[id] == 5:
                update_user(id, 'latitude', media.geo.lat)
                update_user(id, 'longitude', media.geo.long)
                form_filling[id] = 6

                txt = '–ù–∞–ø–∏—à–∏—Ç–µ –æ —Å–µ–±–µ –ø–∞—Ä—É —Å–ª–æ–≤'
                if id in admins:
                    await bot.send_message(id, txt, buttons=admin_keyboard)
                else:
                    await bot.send_message(id, txt, buttons=main_keyboard)
            elif form_filling[id] == 7:
                await bot.download_media(event.original_update.message, file=f'Photos/{id}.png')
                update_user(id, 'photo', f'Photos/{id}.png')
                update_user(id, 'active', 1)
                del form_filling[id]
                await bot.send_message(id, '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
                if is_user_girl(id):
                    await bot.send_file(
                        chat_id,
                        file=get_photo(id),
                        parse_mode='HTML',
                        caption=dict_to_str(get_user(id)),
                        buttons=Button.inline('–ù–∞–ø–∏—Å–∞—Ç—å', f'Dialog={id}')
                    )

    elif id in admins and get_admin_info():
        try:
            user_id = int(text)
            person = await bot.get_entity(user_id)
            await bot.send_message(id, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?', buttons=[
                Button.inline('‚úÖ', f'Info={user_id}'), Button.inline('‚ùå', '‚öúÔ∏è–ê–¥–º–∏–Ω–∫–∞')
            ])
        except ValueError:
            await bot.send_message(id, '–ù–µ–≤–µ—Ä–Ω—ã–π üÜî', buttons=Button.inline('‚ùå–û—Ç–º–µ–Ω–∞', '‚öúÔ∏è–ê–¥–º–∏–Ω–∫–∞'))

    elif id in form_filling:
        stage = form_filling[id]
        if stage == 1:           # –ò–ú–Ø –∏ –§–ê–ú–ò–õ–ò–Ø
            try:
                f_name, l_name = text.split()
                update_user(id, 'f_name', f_name)
                update_user(id, 'l_name', l_name)
                form_filling[id] = 2
                await bot.send_message(id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç')
            except ValueError:
                await bot.send_message(id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö')
        elif stage == 2:         # –í–û–ó–†–ê–°–¢
            try:
                age = int(text)
                if not(10 <= age <= 99):
                    raise ValueError
                update_user(id, 'age', age)
                form_filling[id] = 3
                await bot.send_message(id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª', buttons=choose_sex)
            except ValueError:
                await bot.send_message(id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö')
        elif stage == 4:         # –ì–û–†–û–î
            try:
                update_user(id, 'city', text)
                form_filling[id] = 5
                await bot.send_message(id, '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ì–µ–æ–ø–æ–∑–∏—Ü–∏–µ–π', buttons=geolocation_buttons)
            except Exception as e:
                logging.error(str(e))
        elif stage == 6:         # –õ–ò–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
            update_user(id, 'about', text)
            form_filling[id] = 7
            await bot.send_message(id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–æ—Ñ–∏–ª—è')

    else:
        companion = get_companion(id)
        if companion != 0:
            if id == get_companion(companion):
                await bot.send_message(companion, text)
            else:
                await bot.send_message(id, '–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –µ—â—ë –Ω–µ –ø—Ä–∏–Ω—è–ª –∑–∞–ø—Ä–æ—Å')

        # if id in admins:
        #     await bot.send_message(chat_id, text)
